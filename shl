#!/bin/bash
# /bin/shl

set -euo pipefail
CONFIG="/etc/sht/sht.conf"
[[ -f "$CONFIG" ]] && source "$CONFIG" || { echo "Missing config $CONFIG" >&2; exit 1; }
cmd=${SSH_ORIGINAL_COMMAND:-}

usage() {
    local BD="\033[1m"
    local DM="\033[2m"
    local UN="\033[4m"
    local RS="\033[0m"

    echo -e "shl usage:"
    echo -e "   ssh-add -L | ssh sht@shthub.org ${BD}${UN}add-key${RS} <username>"
    echo -e "         ${DM}copies identity from stdin${RS}"
    echo -e "   pv file.txt | ssh sht@shthub.org ${BD}${UN}blob${RS}"
    echo -e "         ${DM}read from stdin and store blob${RS}"
    echo -e ""
    echo -e "   ssh sht@shthub.org ${BD}${UN}email-otp${RS} <username> <email>"
    echo -e "         ${DM}email OTP and add-key steps to user${RS}${RS}"
    exit 1
}

send_html_mail() {
    local subject="$1"
    local to="$2"
    local template="$3"
    shift 3
    local body
    body=$(<"$template")
    # Replace placeholders
    for pair in "$@"; do
        key="${pair%%=*}"
        val="${pair#*=}"
        body="${body//__${key}__/$val}"
    done
    echo "$body" | mail -a "Content-Type: text/html" -a "From: noreply@ben256.com" -s "$subject" "$to"
}

add_key() {
    local username="$1"
    read -r key
    [[ -z "$key" ]] && { echo "add-key: no key provided" >&2; exit 1; }
    stub_line=$(grep -n "^environment=\"SHTUSER=$username\"" "$KEY_FILE" | grep -v 'ssh-' | head -n 1 | cut -d: -f1)
    [[ -z "$stub_line" ]] && { echo "add-key: no stub found for user $username" >&2; exit 1; }
    prefix="environment=\"SHTUSER=$username\""
    [[ "$key" =~ ^ssh- ]] || { echo "add-key: invalid key format" >&2; exit 1; }
    new_line="$prefix $key"
    tmp=$(mktemp)
    awk -v line="$stub_line" -v new="$new_line" 'NR==line {$0=new} {print}' "$KEY_FILE" > "$tmp"
    mv "$tmp" "$KEY_FILE"
    sudo /bin/shl-lpasswd
}

email_otp() {
    local username="$1" email="$2"
    echo "environment=\"SHTUSER=$username\" " >>"$KEY_FILE"
    OTP=$(sudo /bin/shl-upasswd)
    send_html_mail \
        "sht OTP for $username" "$email" "$TEMPLATE_DIR/otp_email.html" \
        USERNAME="$username" OTP="$OTP" EMAIL="$email"
    echo "OTP sent to $email"
}

blob_cmd() {
    local dgst="$1"
    if [[ -z "$dgst" ]]; then
        echo "Error: no digest provided" >&2
        return 1
    fi

    local target="$BLOB_DIR/$dgst"

    if [[ -f "$target" ]]; then
        echo "BLOB_EXISTS"
        return 0
    fi

    tmpfile=$(mktemp)
    tee "$tmpfile" | sht | awk '{print $1}' | {
        read server_hash
        if [[ "$server_hash" == "$dgst" ]]; then
            mv "$tmpfile" "$target"
            echo "STORED"
        else
            rm "$tmpfile"
            echo "HASH_MISMATCH"
            return 1
        fi
    }
}

fzfb() {
    if [[ "${SHTUSER:-}" != "${ADMIN_USER:-benjamin}" ]]; then
        echo "fzfb: admin only" >&2
        exit 1
    fi

    cd /b
    selected=$(ls -1 | grep -v '^lost+found$' | fzf)
    if [[ -n "$selected" ]]; then
        echo "$selected"
    else
        echo "No blob selected"
    fi
}

# Main dispatch

if [[ "$cmd" == "-h" || "$cmd" == "--help" ]]; then
    usage
fi

if [[ "$cmd" =~ ^add-key\ ([a-zA-Z0-9_]+)$ ]]; then
    add_key "${BASH_REMATCH[1]}"
    exit 0
fi

[[ -z "${SHTUSER:-}" ]] && { echo "Missing SHTUSER" >&2; exit 1; }
[[ -z "$cmd" ]] && usage

if [[ "$cmd" =~ ^email-otp\ ([a-zA-Z0-9_]+)\ ([^[:space:]]+@[^[:space:]]+)$ ]]; then
    [[ "$SHTUSER" == "benjamin" ]] || { echo "Unauthorized" >&2; exit 1; }
    email_otp "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}"
    exit 0
fi

if [[ "$cmd" =~ ^blob([[:space:]]|$) ]]; then
    set -- ${cmd#blob }
    blob_cmd "$@"
    exit 0
fi

if [[ "${SSH_ORIGINAL_COMMAND:-}" =~ ^fzfb$ ]]; then
    fzfb
    exit 0
fi

usage
exit 1
